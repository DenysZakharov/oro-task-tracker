{% extends 'OroUIBundle:actions:view.html.twig' %}
{% import 'OroUIBundle::macros.html.twig' as UI %}
{% import 'OroTagBundle::macros.html.twig' as tag %}
{% import 'OroDataGridBundle::macros.html.twig' as dataGrid %}
{% import 'OroEntityConfigBundle::macros.html.twig' as entityConfig %}

{% block navButtons %}
    {% if resource_granted('EDIT', entity) %}
        {{ UI.editButton({
            'path' : path('issue_update', { id: entity.id }),
            'entity_label': 'Issue'|trans
        }) }}
    {% endif %}
    {% if resource_granted('DELETE', entity) %}
        {{ UI.deleteButton({
            'dataUrl': path('tracker_api_delete_issue', {'id': entity.id}),
            'dataRedirect': path('issue_index'),
            'aCss': 'no-hash remove-button',
            'id': 'btn-remove-user',
            'dataId': entity.id,
            'entity_label': 'issue.entity.label'|trans
        }) }}
    {% endif %}
    {% if entity.type == 'story' and resource_granted('issue_create') %}
        {{ UI.addButton({
            'path' : path('subissue_create', {'parentIssue' : entity.code}),
            'entity_label': 'issue.subentity'|trans
        }) }}
    {% endif %}
{% endblock navButtons %}

{% block pageHeader %}
    {% set breadcrumbs = {
    'entity':      entity,
    'indexPath':   path('issue_index'),
    'indexLabel': 'Issue'|trans,
    'entityTitle': entity.summary
    } %}
    {{ parent() }}
{% endblock pageHeader %}

{% block content_data %}
    {% set data %}
        <div class="widget-content">
            <div class="row-fluid form-horizontal">
                <div class="responsive-block">
                    {{ UI.renderProperty('issue.summary'|trans, entity.summary) }}
                    {{ UI.renderProperty('issue.code'|trans, entity.code) }}
                    {{ UI.renderHtmlProperty('issue.description'|trans, entity.description|nl2br) }}
                    {{ UI.renderProperty('issue.organization'|trans, entity.organization) }}
                    {{ UI.renderProperty('issue.type'|trans, entity.type) }}
                    {{ UI.renderProperty('issue.resolution'|trans, entity.resolution) }}
                    {{ UI.renderProperty('issue.assignee'|trans, entity.assignee) }}
                    {{ UI.renderProperty('issue.reporter'|trans, entity.reporter) }}
                    {{ UI.renderProperty('issue.created'|trans, entity.created|oro_format_datetime) }}
                    {{ UI.renderProperty('issue.updated'|trans, entity.updated|oro_format_datetime) }}
                    {{ UI.renderProperty('issue.priority'|trans, entity.priority) }}
                    {%- if entity.owner -%}
                            {% if resource_granted('oro_user_user_view') %}
                                <a href="{{ path('oro_user_view', {'id': entity.owner.id}) }}">
                                    {{ UI.renderHtmlProperty('issue.owner'|trans, entity.owner|oro_format_name|escape) }}
                                </a>
                            {% else %}
                                    {{ UI.renderHtmlProperty('issue.owner'|trans, entity.owner|oro_format_name|escape) }}
                            {% endif %}
                        {%- endif -%}

                    {% if entity.parent is not empty %}
                        {% set parentLabel = 'issue.story'|trans ~ ': ' ~ entity.parent.summary %}
                        {{ UI.button({
                            'path':  path('issue_view', {'id': entity.parent.id}),
                            'label': parentLabel,
                            'title': parentLabel,
                        }) }}
                    {% endif %}
                </div>
            </div>
        </div>

    {% endset %}
    {% set dataBlocks = [
    {
    'title': 'Data'|trans,
    'class': 'active',
    'subblocks': [
    { 'data' : [data] }
    ]
    }
    ] %}

    {% if entity.type == 'story' %}
        {% set dataBlocks = dataBlocks|merge([{
        'title': 'issue.subissue'|trans,
        'subblocks': [{
        'title': '',
        'useSpan': false,
        'data' : [
        dataGrid.renderGrid('sub-issue-grid', {'parent_id': entity.id})
        ]
        }]
        }] ) %}
    {% endif %}

    {% set id = 'issueView' %}
    {% set data = { 'dataBlocks': dataBlocks } %}

    {{ parent() }}
{% endblock content_data %}